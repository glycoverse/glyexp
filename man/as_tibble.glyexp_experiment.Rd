% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as-tibble.R
\name{as_tibble.glyexp_experiment}
\alias{as_tibble.glyexp_experiment}
\title{Convert an Experiment to a Tibble}
\usage{
\method{as_tibble}{glyexp_experiment}(
  x,
  sample_cols = tidyselect::everything(),
  var_cols = tidyselect::everything(),
  ...
)
}
\arguments{
\item{x}{An \code{\link[=experiment]{experiment()}}.}

\item{sample_cols}{<\code{\link[rlang:args_data_masking]{data-masking}}> Columns to include from the sample information tibble.}

\item{var_cols}{<\code{\link[rlang:args_data_masking]{data-masking}}> Columns to include from the variable information tibble.}

\item{...}{Ignored.}
}
\value{
A tibble.
}
\description{
Convert an experiment object to a tibble of "tidy" format.
That is, each row is a unique combination of "sample" and "variable",
with the observation (the abundance) in the "value" column.
Additional columns in the sample and variable information are included.
This format is also known as the "long" format.

Usually you don't want all columns in the sample information or variable information
tibbles to be included in the output tibble,
as this will make the output tibble very "wide".
You can specify which columns to include in the output tibble
by passing the column names to the \code{sample_cols} and \code{var_cols} arguments.
<\code{\link[rlang:args_data_masking]{data-masking}}> syntax is used here.
By default, all columns are included.
}
\examples{
library(tibble)

# Create a toy experiment for demonstration
toy_exp <- toy_experiment
toy_exp

# Convert the experiment to a tibble
as_tibble(toy_exp)

# specify columns to include
as_tibble(toy_exp, sample_cols = group, var_cols = c(protein, peptide))

}
