% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-slice.R
\name{slice_samples}
\alias{slice_samples}
\alias{slice_variables}
\alias{slice_head_samples}
\alias{slice_head_variables}
\alias{slice_tail_samples}
\alias{slice_tail_variables}
\alias{slice_sample_samples}
\alias{slice_sample_variables}
\alias{slice_max_samples}
\alias{slice_max_variables}
\alias{slice_min_samples}
\alias{slice_min_variables}
\title{Slice Sample or Variable Information}
\usage{
slice_samples(exp, ...)

slice_variables(exp, ...)

slice_head_samples(exp, n, prop)

slice_head_variables(exp, n, prop)

slice_tail_samples(exp, n, prop)

slice_tail_variables(exp, n, prop)

slice_sample_samples(exp, n, prop, weight_by = NULL, replace = FALSE)

slice_sample_variables(exp, n, prop, weight_by = NULL, replace = FALSE)

slice_max_samples(exp, order_by, ..., n, prop, with_ties = TRUE, na_rm = FALSE)

slice_max_variables(
  exp,
  order_by,
  ...,
  n,
  prop,
  with_ties = TRUE,
  na_rm = FALSE
)

slice_min_samples(exp, order_by, ..., n, prop, with_ties = TRUE, na_rm = FALSE)

slice_min_variables(
  exp,
  order_by,
  ...,
  n,
  prop,
  with_ties = TRUE,
  na_rm = FALSE
)
}
\arguments{
\item{exp}{An \code{\link[=experiment]{experiment()}}.}

\item{...}{<\code{\link[rlang:args_data_masking]{data-masking}}> For \verb{slice_*()},
integer row positions. For \code{slice_max()} and \code{slice_min()}, variables to
order by. Other arguments passed to the corresponding dplyr function.}

\item{n}{For \code{slice_head()}, \code{slice_tail()}, \code{slice_sample()}, \code{slice_max()},
and \code{slice_min()}, the number of rows to select.}

\item{prop}{For \code{slice_head()}, \code{slice_tail()}, \code{slice_sample()}, \code{slice_max()},
and \code{slice_min()}, the proportion of rows to select.}

\item{weight_by}{For \code{slice_sample()}, sampling weights.}

\item{replace}{For \code{slice_sample()}, should sampling be with replacement?}

\item{order_by}{For \code{slice_max()} and \code{slice_min()}, variable to order by.}

\item{with_ties}{For \code{slice_max()} and \code{slice_min()}, should ties be kept?}

\item{na_rm}{For \code{slice_max()} and \code{slice_min()}, should missing values be removed?}
}
\value{
A new \code{\link[=experiment]{experiment()}} object.
}
\description{
Slice the sample or variable information tibble of an \code{\link[=experiment]{experiment()}}.

These functions provide row-wise slicing operations similar to dplyr's slice functions.
They select rows by position or based on values in specified columns,
and update the expression matrix accordingly to match the new selection.
\itemize{
\item \code{slice_samples()} and \code{slice_variables()}: Select rows by position
\item \code{slice_head_samples()} and \code{slice_head_variables()}: Select first n rows
\item \code{slice_tail_samples()} and \code{slice_tail_variables()}: Select last n rows
\item \code{slice_sample_samples()} and \code{slice_sample_variables()}: Select random n rows
\item \code{slice_max_samples()} and \code{slice_max_variables()}: Select rows with highest values
\item \code{slice_min_samples()} and \code{slice_min_variables()}: Select rows with lowest values
}
}
\examples{
# Create a toy experiment for demonstration
expr_mat <- matrix(1:25, nrow = 5)
colnames(expr_mat) <- paste0("S", 1:5)
rownames(expr_mat) <- paste0("V", 1:5)
sample_info <- tibble::tibble(
  sample = paste0("S", 1:5),
  group = c("A", "B", "C", "A", "B"),
  score = c(10, 20, 30, 15, 25)
)
var_info <- tibble::tibble(
  variable = paste0("V", 1:5),
  type = c("X", "Y", "Z", "X", "Y"),
  value = c(5, 10, 15, 8, 12)
)
exp <- experiment(expr_mat, sample_info, var_info)

# Select specific rows by position
slice_samples(exp, 1, 3, 5)

# Select first 3 samples
slice_head_samples(exp, n = 3)

# Select last 2 variables
slice_tail_variables(exp, n = 2)

# Select 2 random samples
slice_sample_samples(exp, n = 2)

# Select samples with highest scores
slice_max_samples(exp, order_by = score, n = 2)

# Select variables with lowest values
slice_min_variables(exp, order_by = value, n = 2)

}
