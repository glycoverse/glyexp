% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subsetting.R
\name{[.glyexp_experiment}
\alias{[.glyexp_experiment}
\alias{[<-.glyexp_experiment}
\title{Subsetting experiments}
\usage{
\method{[}{glyexp_experiment}(x, i, j, ...)

\method{[}{glyexp_experiment}(x, i, j, ...) <- value
}
\arguments{
\item{x}{An \code{\link[=experiment]{experiment()}}.}

\item{i, j}{Row (variable) and column (sample) indices to subset.}

\item{...}{Ignored.}

\item{value}{Ignored.}
}
\value{
An \code{\link[=experiment]{experiment()}} object.
}
\description{
Getting a subset of an experiment object.
Subsetting is first done on the expression matrix,
then the sample information and variable information tibbles are filtered
and ordered accordingly.

Syntax for \code{[} is similar to subsetting a matrix,
with some differences:
\itemize{
\item Both row and column indices are required, i.e. \code{exp[i]} is not allowed,
but \code{exp[i, ]} and \code{exp[, j]} are allowed.
\item \code{drop} argument is not supported.
Subsetting an experiment always returns an new experiment,
even if it has only one sample or one variable.
\item Renaming the subsetted experiment is no longer supported.
}

Assigning to a subset of an experiment is not allowed,
i.e., \verb{exp[1, 1[ <- 0} will raise an error.
You can create a new experiment with new data if needed.
}
\examples{
# Create a toy experiment for demonstration
exp <- toy_experiment

# Subsetting single samples
exp[, "S1"]
exp[, 1]

# Subsetting single variables
exp["V1", ]
exp[1, ]

# Subsetting multiple samples and variables
exp[c("V1", "V2"), c("S2", "S3")]
exp[c(1, 2), c(2, 3)]

# Create a copy
exp[, ]

}
