[{"path":[]},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://glycoverse.github.io/glyexp/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://glycoverse.github.io/glyexp/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to glyexp","title":"Contributing to glyexp","text":"outlines propose change glyexp. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://glycoverse.github.io/glyexp/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to glyexp","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://glycoverse.github.io/glyexp/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to glyexp","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://glycoverse.github.io/glyexp/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to glyexp","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"glycoverse/glyexp\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://glycoverse.github.io/glyexp/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to glyexp","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://glycoverse.github.io/glyexp/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to glyexp","text":"Please note glyexp project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://glycoverse.github.io/glyexp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 glyexp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://glycoverse.github.io/glyexp/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with glyexp","title":"Getting help with glyexp","text":"Thanks using glyexp! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://glycoverse.github.io/glyexp/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with glyexp","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://glycoverse.github.io/glyexp/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with glyexp","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://glycoverse.github.io/glyexp/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with glyexp","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://glycoverse.github.io/glyexp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bin Fu. Author, maintainer.","code":""},{"path":"https://glycoverse.github.io/glyexp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu B (2025). glyexp: Glycoproteomics Glycomics Experiments. R package version 0.2.2, https://glycoverse.github.io/glyexp/.","code":"@Manual{,   title = {glyexp: Glycoproteomics and Glycomics Experiments},   author = {Bin Fu},   year = {2025},   note = {R package version 0.2.2},   url = {https://glycoverse.github.io/glyexp/}, }"},{"path":"https://glycoverse.github.io/glyexp/index.html","id":"glyexp-","dir":"","previous_headings":"","what":"Glycoproteomics and Glycomics Experiments","title":"Glycoproteomics and Glycomics Experiments","text":"goal glyexp manage data glycoproteomics glycomics experiments tidy way.","code":""},{"path":"https://glycoverse.github.io/glyexp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Glycoproteomics and Glycomics Experiments","text":"can install development version glyexp GitHub :","code":"# install.packages(\"pak\") pak::pak(\"glycoverse/glyexp\")"},{"path":"https://glycoverse.github.io/glyexp/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Glycoproteomics and Glycomics Experiments","text":"","code":"library(glyexp) library(magrittr)  # Create a toy experiment a_little_toy <- toy_experiment() a_little_toy #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"toy_exp\" #> ℹ Expression matrix: 6 samples, 4 variables #> ℹ Sample information fields: group and batch #> ℹ Variable information fields: protein, peptide, and glycan_composition get_expr_mat(a_little_toy) #>    S1 S2 S3 S4 S5 S6 #> V1  1  5  9 13 17 21 #> V2  2  6 10 14 18 22 #> V3  3  7 11 15 19 23 #> V4  4  8 12 16 20 24 get_sample_info(a_little_toy) #> # A tibble: 6 × 3 #>   sample group batch #>   <chr>  <chr> <dbl> #> 1 S1     A         1 #> 2 S2     A         2 #> 3 S3     A         1 #> 4 S4     B         2 #> 5 S5     B         1 #> 6 S6     B         2 get_var_info(a_little_toy) #> # A tibble: 4 × 4 #>   variable protein peptide glycan_composition #>   <chr>    <chr>   <chr>   <chr>              #> 1 V1       PRO1    PEP1    H5N2               #> 2 V2       PRO2    PEP2    H5N2               #> 3 V3       PRO3    PEP3    N3N2               #> 4 V4       PRO3    PEP4    N3N2 # Filter samples a_little_toy %>%    filter_samples(group == \"A\") %>%    filter_variables(protein == \"PRO1\") #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"toy_exp\" #> ℹ Expression matrix: 3 samples, 1 variables #> ℹ Sample information fields: group and batch #> ℹ Variable information fields: protein, peptide, and glycan_composition"},{"path":"https://glycoverse.github.io/glyexp/reference/add_comp_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Descriptions to Glycan Compositions — add_comp_descriptions","title":"Add Descriptions to Glycan Compositions — add_comp_descriptions","text":"function adds following columns variable information tibble: 'n_hex': number Hex 'n_hexnac': number HexNAc 'n_fuc': number Fuc 'n_neuac': number NeuAc 'n_neugc': number NeuGc 'n_sia': number Sia","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_comp_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Descriptions to Glycan Compositions — add_comp_descriptions","text":"","code":"add_comp_descriptions(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/add_comp_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Descriptions to Glycan Compositions — add_comp_descriptions","text":"exp experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_comp_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Descriptions to Glycan Compositions — add_comp_descriptions","text":"experiment object new columns added.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_comp_descriptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Descriptions to Glycan Compositions — add_comp_descriptions","text":"n_sia sum n_neuac n_neugc. function relies glycan_composition column var_info tibble, glyrepr_composition object. use glyread package directly read results search engines (pGlyco3), column automatically added var_info. construct glyexp_experiment object , need ensure column exists type glyrepr_composition. See glyrepr::glycan_composition() glyrepr::as_glycan_composition() create objects manually.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_glycan_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Glycan Descriptions — add_glycan_descriptions","title":"Add Glycan Descriptions — add_glycan_descriptions","text":"function adds glycan description columns variable information tibble experiment() object. structure information available, composition structure descriptions added. Otherwise, composition descriptions added.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_glycan_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Glycan Descriptions — add_glycan_descriptions","text":"","code":"add_glycan_descriptions(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/add_glycan_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Glycan Descriptions — add_glycan_descriptions","text":"exp experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_glycan_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Glycan Descriptions — add_glycan_descriptions","text":"experiment object new columns added.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_glycan_descriptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Glycan Descriptions — add_glycan_descriptions","text":"function wrapper around add_comp_descriptions() add_struct_descriptions().","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyexp/reference/add_struct_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Descriptions to Glycan Structures — add_struct_descriptions","title":"Add Descriptions to Glycan Structures — add_struct_descriptions","text":"function adds columns glycan structural properties variable information tibble. Depending glycan type (N-glycan, O-glycan), different columns added. Current, N-glycan descriptions implemented. See glymotif::describe_n_glycans() columns added.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_struct_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Descriptions to Glycan Structures — add_struct_descriptions","text":"","code":"add_struct_descriptions(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/add_struct_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Descriptions to Glycan Structures — add_struct_descriptions","text":"exp experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_struct_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Descriptions to Glycan Structures — add_struct_descriptions","text":"experiment object new columns added.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/add_struct_descriptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Descriptions to Glycan Structures — add_struct_descriptions","text":"function relies glycan_structure column var_info tibble, glyrepr_structure object. use glyread package directly read results search engines (pGlyco3), column automatically added var_info. construct glyexp_experiment object , need ensure column exists type glyrepr_structure. See glyrepr::glycan_structure() glyrepr::as_glycan_structure() create objects manually.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyexp/reference/as_tibble.glyexp_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Experiment to a Tibble — as_tibble.glyexp_experiment","title":"Convert an Experiment to a Tibble — as_tibble.glyexp_experiment","text":"Convert experiment object tibble \"tidy\" format. , row unique combination \"sample\" \"variable\", observation (abundance) \"value\" column. Additional columns sample variable information included. format also known \"long\" format. Usually want columns sample information variable information tibbles included output tibble, make output tibble \"wide\". can specify columns include output tibble passing column names sample_cols var_cols arguments. <data-masking> syntax used . default, columns included.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/as_tibble.glyexp_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Experiment to a Tibble — as_tibble.glyexp_experiment","text":"","code":"# S3 method for class 'glyexp_experiment' as_tibble(   x,   sample_cols = tidyselect::everything(),   var_cols = tidyselect::everything(),   ... )"},{"path":"https://glycoverse.github.io/glyexp/reference/as_tibble.glyexp_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Experiment to a Tibble — as_tibble.glyexp_experiment","text":"x experiment(). sample_cols <data-masking> Columns include sample information tibble. var_cols <data-masking> Columns include variable information tibble. ... Ignored.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/as_tibble.glyexp_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an Experiment to a Tibble — as_tibble.glyexp_experiment","text":"tibble.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/as_tibble.glyexp_experiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an Experiment to a Tibble — as_tibble.glyexp_experiment","text":"","code":"library(tibble)  # Create a toy experiment for demonstration toy_exp <- toy_experiment() toy_exp #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"toy_exp\" #> ℹ Expression matrix: 6 samples, 4 variables #> ℹ Sample information fields: group and batch #> ℹ Variable information fields: protein, peptide, and glycan_composition  # Convert the experiment to a tibble as_tibble(toy_exp) #> # A tibble: 24 × 8 #>    sample group batch variable protein peptide glycan_composition value #>    <chr>  <chr> <dbl> <chr>    <chr>   <chr>   <chr>              <int> #>  1 S1     A         1 V1       PRO1    PEP1    H5N2                   1 #>  2 S2     A         2 V1       PRO1    PEP1    H5N2                   5 #>  3 S3     A         1 V1       PRO1    PEP1    H5N2                   9 #>  4 S4     B         2 V1       PRO1    PEP1    H5N2                  13 #>  5 S5     B         1 V1       PRO1    PEP1    H5N2                  17 #>  6 S6     B         2 V1       PRO1    PEP1    H5N2                  21 #>  7 S1     A         1 V2       PRO2    PEP2    H5N2                   2 #>  8 S2     A         2 V2       PRO2    PEP2    H5N2                   6 #>  9 S3     A         1 V2       PRO2    PEP2    H5N2                  10 #> 10 S4     B         2 V2       PRO2    PEP2    H5N2                  14 #> # ℹ 14 more rows  # specify columns to include as_tibble(toy_exp, sample_cols = group, var_cols = c(protein, peptide)) #> # A tibble: 24 × 6 #>    sample group variable protein peptide value #>    <chr>  <chr> <chr>    <chr>   <chr>   <int> #>  1 S1     A     V1       PRO1    PEP1        1 #>  2 S2     A     V1       PRO1    PEP1        5 #>  3 S3     A     V1       PRO1    PEP1        9 #>  4 S4     B     V1       PRO1    PEP1       13 #>  5 S5     B     V1       PRO1    PEP1       17 #>  6 S6     B     V1       PRO1    PEP1       21 #>  7 S1     A     V2       PRO2    PEP2        2 #>  8 S2     A     V2       PRO2    PEP2        6 #>  9 S3     A     V2       PRO2    PEP2       10 #> 10 S4     B     V2       PRO2    PEP2       14 #> # ℹ 14 more rows"},{"path":"https://glycoverse.github.io/glyexp/reference/dim.glyexp_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of an Experiment — dim.glyexp_experiment","title":"Dimensions of an Experiment — dim.glyexp_experiment","text":"Retrieve dimensions experiment object, .e. number variables samples.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/dim.glyexp_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of an Experiment — dim.glyexp_experiment","text":"","code":"# S3 method for class 'glyexp_experiment' dim(x)  # S3 method for class 'glyexp_experiment' dim(x) <- value"},{"path":"https://glycoverse.github.io/glyexp/reference/dim.glyexp_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of an Experiment — dim.glyexp_experiment","text":"x experiment object. value Ignored.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/dim.glyexp_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of an Experiment — dim.glyexp_experiment","text":"vector two elements: number variables number samples.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/dimnames.glyexp_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimname for Experiment — dimnames.glyexp_experiment","title":"Dimname for Experiment — dimnames.glyexp_experiment","text":"dimnames method experiment() objects dimnames expression matrix.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/dimnames.glyexp_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimname for Experiment — dimnames.glyexp_experiment","text":"","code":"# S3 method for class 'glyexp_experiment' dimnames(x, ...)"},{"path":"https://glycoverse.github.io/glyexp/reference/dimnames.glyexp_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimname for Experiment — dimnames.glyexp_experiment","text":"x experiment(). ... Ignored.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/dimnames.glyexp_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimname for Experiment — dimnames.glyexp_experiment","text":"list dimnames expression matrix.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new experiment — experiment","title":"Create a new experiment — experiment","text":"experiment S3 object contains data glycoproteomics glycomics experiment. Expression matrix, sample information, variable information required managed experiment object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new experiment — experiment","text":"","code":"experiment(name, expr_mat, sample_info, var_info, meta_data = NULL)"},{"path":"https://glycoverse.github.io/glyexp/reference/experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new experiment — experiment","text":"name character string name experiment. expr_mat expression matrix samples columns variables rows. sample_info tibble column named \"sample\", columns useful information samples, e.g. group, batch, sex, age, etc. var_info tibble column named \"variable\", columns useful information variables, e.g. protein name, peptide, glycan composition, etc. meta_data list additional information experiment.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new experiment — experiment","text":"experiment(). input data wrong, error raised.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/experiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new experiment — experiment","text":"colnames(expr_mat) identical sample_info$sample, rownames(expr_mat) identical var_info$variable. \"sample\" \"variable\" columns unique. Order matter, expression matrix reordered match order sample_info$sample var_info$variable. attributes can added experiment object. example, meta_data can used store additional information like experiment type (\"N-glyproteomics\", \"O-glycoproteomics\", \"N-glycomics\", etc.), quantification method (TMT, iTRAQ, label-free, etc.), information. two conventions used glyread package. experiment() provides multiple methods tidyverse style filter samples variables add new sample information variable information. core glyexp ecosystem data container.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/experiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new experiment — experiment","text":"","code":"expr_mat <- matrix(runif(9), nrow = 3, ncol = 3) colnames(expr_mat) <- c(\"S1\", \"S2\", \"S3\") rownames(expr_mat) <- c(\"V1\", \"V2\", \"V3\") sample_info <- tibble::tibble(sample = c(\"S1\", \"S2\", \"S3\"), group = c(\"A\", \"B\", \"A\")) var_info <- tibble::tibble(variable = c(\"V1\", \"V2\", \"V3\"), protein = c(\"P1\", \"P2\", \"P3\")) experiment(\"my_exp\", expr_mat, sample_info, var_info) #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 3 samples, 3 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: protein"},{"path":"https://glycoverse.github.io/glyexp/reference/filter_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Samples or Variables of an Experiment — filter_samples","title":"Filter Samples or Variables of an Experiment — filter_samples","text":"Getting subset experiment() filtering samples variables. syntax dplyr::filter() used. example, get subset experiment keeping \"HC\" samples, use filter_samples(exp, group == \"HC\"). actually calls dplyr::filter() sample information tibble condition group == \"HC\", updates expression matrix accordingly. samples variables left filtering, error thrown.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/filter_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Samples or Variables of an Experiment — filter_samples","text":"","code":"filter_samples(exp, ...)  filter_variables(exp, ...)"},{"path":"https://glycoverse.github.io/glyexp/reference/filter_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Samples or Variables of an Experiment — filter_samples","text":"exp experiment(). ... <data-masking> Expression filter samples variables. passed dplyr::filter() internally.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/filter_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Samples or Variables of an Experiment — filter_samples","text":"new experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/filter_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Samples or Variables of an Experiment — filter_samples","text":"","code":"library(magrittr)  # Create a toy experiment for demonstration expr_mat <- matrix(1:25, nrow = 5) colnames(expr_mat) <- paste0(\"S\", 1:5) rownames(expr_mat) <- paste0(\"V\", 1:5) sample_info <- tibble::tibble(   sample = paste0(\"S\", 1:5),   group = c(\"A\", \"A\", \"A\", \"B\", \"B\") ) var_info <- tibble::tibble(   variable = paste0(\"V\", 1:5),   type = c(\"X\", \"X\", \"Y\", \"Y\", \"Y\") ) exp <- experiment(\"my_exp\", expr_mat, sample_info, var_info)  # Filter samples sub_exp_1 <- filter_samples(exp, group == \"A\") get_sample_info(sub_exp_1) #> # A tibble: 3 × 2 #>   sample group #>   <chr>  <chr> #> 1 S1     A     #> 2 S2     A     #> 3 S3     A     get_expr_mat(sub_exp_1) #>    S1 S2 S3 #> V1  1  6 11 #> V2  2  7 12 #> V3  3  8 13 #> V4  4  9 14 #> V5  5 10 15  # Filter variables sub_exp_2 <- filter_variables(exp, type == \"X\") get_var_info(sub_exp_2) #> # A tibble: 2 × 2 #>   variable type  #>   <chr>    <chr> #> 1 V1       X     #> 2 V2       X     get_expr_mat(sub_exp_2) #>    S1 S2 S3 S4 S5 #> V1  1  6 11 16 21 #> V2  2  7 12 17 22  # Use pipe sub_exp_3 <- exp %>%   filter_samples(group == \"A\") %>%   filter_variables(type == \"X\") get_sample_info(sub_exp_3) #> # A tibble: 3 × 2 #>   sample group #>   <chr>  <chr> #> 1 S1     A     #> 2 S2     A     #> 3 S3     A     get_var_info(sub_exp_3) #> # A tibble: 2 × 2 #>   variable type  #>   <chr>    <chr> #> 1 V1       X     #> 2 V2       X     get_expr_mat(sub_exp_3) #>    S1 S2 S3 #> V1  1  6 11 #> V2  2  7 12"},{"path":"https://glycoverse.github.io/glyexp/reference/get_expr_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Expression Matrix of an experiment() — get_expr_mat","title":"Get the Expression Matrix of an experiment() — get_expr_mat","text":"matrix expression values samples columns variables rows.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_expr_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Expression Matrix of an experiment() — get_expr_mat","text":"","code":"get_expr_mat(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/get_expr_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Expression Matrix of an experiment() — get_expr_mat","text":"exp experiment().","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_expr_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Expression Matrix of an experiment() — get_expr_mat","text":"matrix expression values.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the meta data of an experiment() — get_meta_data","title":"Get the meta data of an experiment() — get_meta_data","text":"Meta data named list arbitrary data experiment, e.g. \"structure_type\", \"glycan_type\", \"data_type\".","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the meta data of an experiment() — get_meta_data","text":"","code":"get_meta_data(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/get_meta_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the meta data of an experiment() — get_meta_data","text":"exp experiment().","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_meta_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the meta data of an experiment() — get_meta_data","text":"meta data named list.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_sample_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Sample Information of an experiment() — get_sample_info","title":"Get the Sample Information of an experiment() — get_sample_info","text":"tibble sample information, first column \"sample\".","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_sample_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Sample Information of an experiment() — get_sample_info","text":"","code":"get_sample_info(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/get_sample_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Sample Information of an experiment() — get_sample_info","text":"exp experiment().","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_sample_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Sample Information of an experiment() — get_sample_info","text":"tibble sample information.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_var_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Variable Information of an experiment() — get_var_info","title":"Get the Variable Information of an experiment() — get_var_info","text":"tibble variable information, first column \"variable\".","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_var_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Variable Information of an experiment() — get_var_info","text":"","code":"get_var_info(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/get_var_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Variable Information of an experiment() — get_var_info","text":"exp experiment().","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/get_var_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Variable Information of an experiment() — get_var_info","text":"tibble variable information.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/is_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is an Experiment — is_experiment","title":"Check if an Object is an Experiment — is_experiment","text":"function checks object experiment, .e. inherits class glyexp_experiment.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/is_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is an Experiment — is_experiment","text":"","code":"is_experiment(x)"},{"path":"https://glycoverse.github.io/glyexp/reference/is_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is an Experiment — is_experiment","text":"x object check.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/is_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is an Experiment — is_experiment","text":"logical value.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/mutate_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate Sample or Variable Information — mutate_samples","title":"Mutate Sample or Variable Information — mutate_samples","text":"Mutate sample variable information tibble experiment(). syntax dplyr::mutate() used. example, add new column sample information tibble, use mutate_samples(exp, new_column = value). actually calls dplyr::mutate() sample information tibble new_column = value. sample column sample_info variable column var_info modified, new column must unique, otherwise error thrown. column names row names expr_mat updated accordingly.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/mutate_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate Sample or Variable Information — mutate_samples","text":"","code":"mutate_samples(exp, ...)  mutate_variables(exp, ...)"},{"path":"https://glycoverse.github.io/glyexp/reference/mutate_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate Sample or Variable Information — mutate_samples","text":"exp experiment(). ... <data-masking> Name-value pairs, passed dplyr::mutate() internally.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/mutate_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate Sample or Variable Information — mutate_samples","text":"new experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/mutate_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate Sample or Variable Information — mutate_samples","text":"","code":"# Create a toy experiment for demonstration expr_mat <- matrix(1:25, nrow = 5) colnames(expr_mat) <- paste0(\"S\", 1:5) rownames(expr_mat) <- paste0(\"V\", 1:5) sample_info <- tibble::tibble(   sample = paste0(\"S\", 1:5),   group = c(\"A\", \"A\", \"A\", \"B\", \"B\") ) var_info <- tibble::tibble(   variable = paste0(\"V\", 1:5),   type = c(\"X\", \"X\", \"Y\", \"Y\", \"Y\") ) exp <- experiment(\"my_exp\", expr_mat, sample_info, var_info)  # Add a new column to sample information tibble or variable information tibble mutate_samples(exp, new_column = c(1, 2, 3, 4, 5))$sample_info #> # A tibble: 5 × 3 #>   sample group new_column #>   <chr>  <chr>      <dbl> #> 1 S1     A              1 #> 2 S2     A              2 #> 3 S3     A              3 #> 4 S4     B              4 #> 5 S5     B              5 mutate_variables(exp, new_column = c(\"A\", \"A\", \"B\", \"B\", \"B\"))$var_info #> # A tibble: 5 × 3 #>   variable type  new_column #>   <chr>    <chr> <chr>      #> 1 V1       X     A          #> 2 V2       X     A          #> 3 V3       Y     B          #> 4 V4       Y     B          #> 5 V5       Y     B           # Modify existing columns mutate_samples(exp, group = dplyr::if_else(group == \"A\", \"good\", \"bad\"))$sample_info #> # A tibble: 5 × 2 #>   sample group #>   <chr>  <chr> #> 1 S1     good  #> 2 S2     good  #> 3 S3     good  #> 4 S4     bad   #> 5 S5     bad   mutate_variables(exp, type = dplyr::if_else(type == \"X\", \"good\", \"bad\"))$var_info #> # A tibble: 5 × 2 #>   variable type  #>   <chr>    <chr> #> 1 V1       good  #> 2 V2       good  #> 3 V3       bad   #> 4 V4       bad   #> 5 V5       bad    # Modify the `sample` column in sample information tibble new_exp <- mutate_samples(exp, sample = c(\"SI\", \"SII\", \"SIII\", \"SIV\", \"SV\")) new_exp$sample_info #> # A tibble: 5 × 2 #>   sample group #>   <chr>  <chr> #> 1 SI     A     #> 2 SII    A     #> 3 SIII   A     #> 4 SIV    B     #> 5 SV     B     new_exp$expr_mat #>    SI SII SIII SIV SV #> V1  1   6   11  16 21 #> V2  2   7   12  17 22 #> V3  3   8   13  18 23 #> V4  4   9   14  19 24 #> V5  5  10   15  20 25  # Modify the `variable` column in variable information tibble new_exp <- mutate_variables(exp, variable = c(\"VI\", \"VII\", \"VIII\", \"VIV\", \"VV\")) new_exp$var_info #> # A tibble: 5 × 2 #>   variable type  #>   <chr>    <chr> #> 1 VI       X     #> 2 VII      X     #> 3 VIII     Y     #> 4 VIV      Y     #> 5 VV       Y     new_exp$expr_mat #>      S1 S2 S3 S4 S5 #> VI    1  6 11 16 21 #> VII   2  7 12 17 22 #> VIII  3  8 13 18 23 #> VIV   4  9 14 19 24 #> VV    5 10 15 20 25"},{"path":"https://glycoverse.github.io/glyexp/reference/n_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Number of Samples or Variables of an Experiment — n_samples","title":"Get Number of Samples or Variables of an Experiment — n_samples","text":"Getting number samples variables experiment(). Syntax sugar ncol(exp$expr_mat) nrow(exp$expr_mat).","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/n_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Number of Samples or Variables of an Experiment — n_samples","text":"","code":"n_samples(exp)  n_variables(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/n_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Number of Samples or Variables of an Experiment — n_samples","text":"exp experiment().","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/n_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Number of Samples or Variables of an Experiment — n_samples","text":"integer number samples variables.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/n_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Number of Samples or Variables of an Experiment — n_samples","text":"","code":"exp <- toy_experiment() n_samples(exp) #> [1] 6 n_variables(exp) #> [1] 4"},{"path":"https://glycoverse.github.io/glyexp/reference/rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename an Experiment — rename","title":"Rename an Experiment — rename","text":"Getting new experiment new name.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename an Experiment — rename","text":"","code":"rename(exp, new_name)"},{"path":"https://glycoverse.github.io/glyexp/reference/rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename an Experiment — rename","text":"exp experiment object. new_name character string new name.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename an Experiment — rename","text":"experiment object new name.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/rename_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Columns in the Sample or Variable Information Tibble — rename_samples","title":"Rename Columns in the Sample or Variable Information Tibble — rename_samples","text":"two functions provide way rename columns sample variable information tibble experiment(). syntax dplyr::rename() used. example, rename \"group\" column sample information tibble \"condition\", use rename_samples(exp, condition = group). Note rename \"sample\" column sample information tibble, well \"variable\" column variable information tibble. two columns used link sample variable information tibble expression matrix.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/rename_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Columns in the Sample or Variable Information Tibble — rename_samples","text":"","code":"rename_samples(exp, ...)  rename_variables(exp, ...)"},{"path":"https://glycoverse.github.io/glyexp/reference/rename_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Columns in the Sample or Variable Information Tibble — rename_samples","text":"exp experiment(). ... <data-masking> Name pairs rename. Use new_name = old_name rename columns.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/rename_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Columns in the Sample or Variable Information Tibble — rename_samples","text":"new experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/rename_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Columns in the Sample or Variable Information Tibble — rename_samples","text":"","code":"toy_exp <- toy_experiment() toy_exp #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"toy_exp\" #> ℹ Expression matrix: 6 samples, 4 variables #> ℹ Sample information fields: group and batch #> ℹ Variable information fields: protein, peptide, and glycan_composition  # Rename columns in sample information tibble rename_samples(toy_exp, condition = group) #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"toy_exp\" #> ℹ Expression matrix: 6 samples, 4 variables #> ℹ Sample information fields: condition and batch #> ℹ Variable information fields: protein, peptide, and glycan_composition  # Rename columns in variable information tibble rename_variables(toy_exp, composition = glycan_composition) #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"toy_exp\" #> ℹ Expression matrix: 6 samples, 4 variables #> ℹ Sample information fields: group and batch #> ℹ Variable information fields: protein, peptide, and composition"},{"path":"https://glycoverse.github.io/glyexp/reference/samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Samples or Variables of an Experiment — samples","title":"Get Samples or Variables of an Experiment — samples","text":"Getting names samples variables experiment(). Syntax sugar colnames(exp$expr_mat) rownames(exp$expr_mat).","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Samples or Variables of an Experiment — samples","text":"","code":"samples(exp)  variables(exp)"},{"path":"https://glycoverse.github.io/glyexp/reference/samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Samples or Variables of an Experiment — samples","text":"exp experiment().","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Samples or Variables of an Experiment — samples","text":"character vector sample variable names.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Samples or Variables of an Experiment — samples","text":"","code":"exp <- toy_experiment() samples(exp) #> [1] \"S1\" \"S2\" \"S3\" \"S4\" \"S5\" \"S6\" variables(exp) #> [1] \"V1\" \"V2\" \"V3\" \"V4\""},{"path":"https://glycoverse.github.io/glyexp/reference/select_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Columns of the Sample or Variable Information Tibble — select_samples","title":"Select Columns of the Sample or Variable Information Tibble — select_samples","text":"two functions provide way trimming sample variable information tibble experiment() columns interest. syntax dplyr::select() used. example, get new experiment() \"sample\" \"group\" columns sample information tibble, use select_samples(exp, group). Note need () explicitly select deselect sample column sample_info. automatically handled select_samples(), always selected. applies variable column var_info.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/select_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Columns of the Sample or Variable Information Tibble — select_samples","text":"","code":"select_samples(exp, ...)  select_variables(exp, ...)"},{"path":"https://glycoverse.github.io/glyexp/reference/select_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Columns of the Sample or Variable Information Tibble — select_samples","text":"exp experiment(). ... <data-masking> Column names select. empty, columns except sample variable column discarded.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/select_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Columns of the Sample or Variable Information Tibble — select_samples","text":"new experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/select_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Columns of the Sample or Variable Information Tibble — select_samples","text":"","code":"library(magrittr)  toy_exp <- toy_experiment()  toy_exp_2 <- toy_exp %>%   select_samples(group) %>%   select_variables(protein, peptide)  get_sample_info(toy_exp_2) #> # A tibble: 6 × 2 #>   sample group #>   <chr>  <chr> #> 1 S1     A     #> 2 S2     A     #> 3 S3     A     #> 4 S4     B     #> 5 S5     B     #> 6 S6     B     get_var_info(toy_exp_2) #> # A tibble: 4 × 3 #>   variable protein peptide #>   <chr>    <chr>   <chr>   #> 1 V1       PRO1    PEP1    #> 2 V2       PRO2    PEP2    #> 3 V3       PRO3    PEP3    #> 4 V4       PRO3    PEP4"},{"path":"https://glycoverse.github.io/glyexp/reference/sub-.glyexp_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting experiments — [.glyexp_experiment","title":"Subsetting experiments — [.glyexp_experiment","text":"Getting subset experiment object. Subsetting first done expression matrix, sample information variable information tibbles filtered ordered accordingly. Syntax [ similar subsetting matrix, differences: row column indices required, .e. exp[] allowed, exp[, ] exp[, j] allowed. drop argument supported. Subsetting experiment always returns new experiment, even one sample one variable. name argument added change name subsetted experiment. omitted, name original experiment used. Assigning subset experiment allowed, .e., exp[1, 1[ <- 0 raise error. can create new experiment new data needed.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/sub-.glyexp_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting experiments — [.glyexp_experiment","text":"","code":"# S3 method for class 'glyexp_experiment' x[i, j, name = NULL, ...]  # S3 method for class 'glyexp_experiment' x[i, j, ...] <- value"},{"path":"https://glycoverse.github.io/glyexp/reference/sub-.glyexp_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsetting experiments — [.glyexp_experiment","text":"x experiment(). , j Row (variable) column (sample) indices subset. name Name subsetted experiment. ... Ignored. value Ignored.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/sub-.glyexp_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsetting experiments — [.glyexp_experiment","text":"experiment() object.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/sub-.glyexp_experiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsetting experiments — [.glyexp_experiment","text":"","code":"# Create a toy experiment for demonstration expr_mat <- matrix(1:9, nrow = 3) colnames(expr_mat) <- c(\"S1\", \"S2\", \"S3\") rownames(expr_mat) <- c(\"V1\", \"V2\", \"V3\") sample_info <- tibble::tibble(   sample = c(\"S1\", \"S2\", \"S3\"),   group = rep(\"A\", 3) ) var_info <- tibble::tibble(   variable = c(\"V1\", \"V2\", \"V3\"),   type = rep(\"B\", 3) ) exp <- experiment(\"my_exp\", expr_mat, sample_info, var_info)  # Subsetting single samples exp[, \"S1\"] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 1 samples, 3 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type exp[, 1] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 1 samples, 3 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type  # Subsetting single variables exp[\"V1\", ] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 3 samples, 1 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type exp[1, ] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 3 samples, 1 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type  # Subsetting multiple samples and variables exp[c(\"V1\", \"V2\"), c(\"S2\", \"S3\")] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 2 samples, 2 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type exp[c(1, 2), c(2, 3)] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 2 samples, 2 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type  # Subsetting with a new name exp[c(\"V1\", \"V2\"), c(\"S2\", \"S3\"), name = \"sub_exp\"] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"sub_exp\" #> ℹ Expression matrix: 2 samples, 2 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type  # Create a copy exp[, ] #>  #> ── Experiment ────────────────────────────────────────────────────────────────── #> ℹ Name: \"my_exp\" #> ℹ Expression matrix: 3 samples, 3 variables #> ℹ Sample information fields: group #> ℹ Variable information fields: type"},{"path":"https://glycoverse.github.io/glyexp/reference/toy_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Toy Experiment — toy_experiment","title":"Create a Toy Experiment — toy_experiment","text":"function creates toy experiment object new users play get familiar experiment() objects. experiment 4 variables 6 samples. var_info contains fields: protein, peptide, glycan_composition. sample_info contains fields: group batch.","code":""},{"path":"https://glycoverse.github.io/glyexp/reference/toy_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Toy Experiment — toy_experiment","text":"","code":"toy_experiment()"},{"path":"https://glycoverse.github.io/glyexp/reference/toy_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Toy Experiment — toy_experiment","text":"experiment() object.","code":""}]
